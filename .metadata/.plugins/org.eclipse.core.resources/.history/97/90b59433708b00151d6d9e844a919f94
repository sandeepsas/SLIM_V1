
/**
 * A class to maintain a node with given parameters found in OSM/XML data.
 * 
 * @author Sandeep Sasidharan
 *
 */
public class GraphNode {
	private double lon;
	private double lat;
	private String name;
	private long id;
	
	/**
	 * Constructor to create an empty node with everything set to 0/null/false
	 */
	public GraphNode() {
		this.lon = 0.0;
		this.lat = 0.0;
		this.name = null;
	}
	
	/**
	 * Constructor to create a node with given parameters.
	 * 	
	 * @param lon the longitude
	 * @param lat the latitude
	 * @param name the name
	 * @param indoors true if is indoor node
	 * @param isDoor true if is door
	 * @param level the level
	 */
	public GraphNode(double lon, double lat, String name, boolean indoors, boolean isDoor, float level) {
		this.lon = lon;
		this.lat = lat;
		this.name = name;
	}
	

	public double getLon() {
		return lon;
	}
	
	public double getLat() {
		return lat;
	}
	
	public String getName() {
		return name;
	}
	
	public long getId() {
		return id;
	}
	
	public void setLon(double lon) {
		this.lon = lon;
	}
	
	public void setLat(double lat) {
		this.lat = lat;
	}
	
	public void setName(String name) {
		this.name = name;
	}
		
	public void setId(long l){
		this.id = l;
	}
	
	public boolean equals(GraphNode node){
		if(node == null)
			return false;
		return this.getId()==node.getId();
	}
	
/*	public String toString(){
		String ret = "\nNode(" + this.id +"): ";
		ret += name!=null?name:"N/A";
		ret += isInDoors ? " (indoors)" : " (outdoors)";
		ret += "\n    Level: " + this.level;
		ret += "\n    Lat: " + this.lat;
		ret += "\n    Lon: " + this.lon;
		if(getMergeId()!=null){
			ret +="\n    Merges with: " + getMergeId();
		}
		return ret;
	}*/
}
